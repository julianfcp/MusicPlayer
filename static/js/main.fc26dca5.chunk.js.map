{"version":3,"sources":["components/Player.js","components/Song.js","components/LibrarySong.js","components/Library.js","components/Nav.js","data.js","App.js","reportWebVitals.js","index.js"],"names":["Player","currentSong","setCurrentSong","isPlaying","setIsPlaying","audioRef","songs","setSongs","useState","currentTime","duration","songInfo","setSongInfo","timeUpdateHandler","e","target","getTime","time","Math","floor","slice","skipTrackHandler","direction","a","currentIndex","findIndex","song","id","newIndex","length","newSongs","map","active","current","play","className","min","max","value","onChange","type","onClick","size","icon","faAngleLeft","pause","faPause","faPlay","faAngleRight","onTimeUpdate","onLoadedMetadata","ref","src","audio","onEnded","Song","cover","alt","name","artist","LibrarySong","songSelectHandler","Library","libraryStatus","songList","Nav","setLibraryStatus","faMusic","chillHop","color","uuidv4","App","useRef","data","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fc26dca5.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\n// fontawesome\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  currentSong,\n  setCurrentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songs,\n  setSongs,\n}) => {\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n  });\n  // handlers\n  const timeUpdateHandler = (e) => {\n    setSongInfo({\n      // spread operator, updates song info\n      ...songInfo,\n      currentTime: e.target.currentTime,\n      duration: e.target.duration,\n    });\n  };\n\n  // Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      setIsPlaying(false); // !isPlaying\n      audioRef.current.pause();\n    } else {\n      setIsPlaying(true); // !isPlaying\n      audioRef.current.play();\n    }\n  };\n  const getTime = (time) => {\n    // Formats time of the song, mints and secs\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value; //updates audio time when slicing\n    setSongInfo({\n      // updates song time state when slicing\n      ...songInfo,\n      currentTime: e.target.value,\n    });\n  };\n  const skipTrackHandler = async (direction) => {\n    // find what is the index of the current song\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    // stores new index calculated\n    let newIndex = currentIndex;\n    switch (direction) {\n      case \"skip-back\":\n        if (currentIndex - 1 < 0) {\n          newIndex = songs.length - 1;\n        } else {\n          newIndex = (currentIndex - 1) % songs.length;\n        }\n        break;\n      case \"skip-forward\":\n        // when modulus is 0, it resets the index to 0 and start over again\n        newIndex = (currentIndex + 1) % songs.length;\n        break;\n      default:\n        break;\n    }\n    // sets the new song with the new index calculated\n    // awaits to set the song and then play it\n    await setCurrentSong(songs[newIndex]);\n    // updates the library with the active tag\n    const newSongs = songs.map((song) => {\n      if (song.id === songs[newIndex].id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    // sets the new Songs updated\n    setSongs(newSongs);\n    // play de audio when skip\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          // input valus\n          min={0}\n          max={songInfo ? getTime(songInfo.duration) : 0}\n          value={songInfo.currentTime}\n          onChange={dragHandler}\n          type=\"range\"\n        />\n        <p>\n          {getTime(songInfo.duration) === \"NaN:aN\"\n            ? \"0:00\"\n            : getTime(songInfo.duration)}\n        </p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n      <audio\n        // audio events\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={() => skipTrackHandler(\"skip-forward\")}\n      ></audio>\n    </div>\n  );\n};\n\nexport default Player;\n","import React from \"react\";\n\nconst Song = ({ currentSong }) => {\n  return (\n    <div className=\"song-container\">\n      <img src={currentSong.cover} alt={currentSong.name} />\n      <h2>{currentSong.name}</h2>\n      <h3>{currentSong.artist}</h3>\n    </div>\n  );\n};\n\nexport default Song;\n","import React from \"react\";\n\nconst LibrarySong = ({\n  song,\n  id,\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  // setCurrentSong\n  const songSelectHandler = async () => {\n    // awaits to set the song and then play it\n    await setCurrentSong(song);\n    // modify state\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    if (isPlaying) {\n      audioRef.current.play();\n    }\n  };\n\n  return (\n    <div\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n      onClick={songSelectHandler}\n    >\n      <img src={song.cover} alt={song.name} />\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n","import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({\n  songs,\n  setCurrentSong,\n  audioRef,\n  isPlaying,\n  setSongs,\n  libraryStatus,\n}) => {\n  const songList = songs.map((song) => (\n    <LibrarySong\n      key={song.id}\n      setCurrentSong={setCurrentSong}\n      songs={songs}\n      song={song}\n      id={song.id}\n      audioRef={audioRef}\n      isPlaying={isPlaying}\n      setSongs={setSongs}\n    />\n  ));\n\n  return (\n    <div className={`library ${libraryStatus ? \"active-library\" : \"\"}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">{songList}</div>\n    </div>\n  );\n};\n\nexport default Library;\n","import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMusic } from \"@fortawesome/free-solid-svg-icons\";\n\nconst Nav = ({ libraryStatus, setLibraryStatus }) => {\n  return (\n    <nav>\n      <h1>ChillHop</h1>\n      <button\n        onClick={() => {\n          setLibraryStatus(!libraryStatus);\n        }}\n      >\n        Library\n        <FontAwesomeIcon icon={faMusic} />\n      </button>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import { v4 as uuidv4 } from \"uuid\";\n\nfunction chillHop() {\n  return [\n    {\n      name: \"Plants\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\n      artist: \"Philantrhope, Ian Ewing, Sleepy Fish\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10255\",\n      color: [\"#915739\", \"#CB493C\"],\n      id: uuidv4(),\n      active: true,\n    },\n    {\n      name: \"Willow\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/2899f7cc22ab12e17d0119819aac3ca9dbab46e6-1024x1024.jpg\",\n      artist: \"Philantrhope, Brock Berrigan, The Field Tapes\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=10262\",\n      color: [\"#915739\", \"#CB493C\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Hidden Structure\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\n      artist: \"Leavv, Flitz&Suppe\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9913\",\n      color: [\"#7D6D5B\", \"#255D5A\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"With Time\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/88e7eb711f8c71d87fc102e97cf91e36f692348d-1024x1024.jpg\",\n      artist: \"Leavv, The Field Tapes\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9925\",\n      color: [\"#7D6D5B\", \"#255D5A\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Foggy Road\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/10/efaa848553d09b4d9fc0752844456e41b34de276-1024x1024.jpg\",\n      artist: \"Toonorth\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=7834\",\n      color: [\"#59ABF5\", \"#414075\"],\n      id: uuidv4(),\n      active: false,\n    },\n    {\n      name: \"Bliss\",\n      cover:\n        \"https://chillhop.com/wp-content/uploads/2020/09/5bff1a6f1bd0e2168d29b4c841b811598135e457-1024x1024.jpg\",\n      artist: \"Misha, Jussi Halme\",\n      audio: \"https://mp3.chillhop.com/serve.php/?mp3=9248\",\n      color: [\"#3F4B76\", \"#F194A0\"],\n      id: uuidv4(),\n      active: false,\n    },\n  ];\n}\n\nexport default chillHop;\n","import { useState, useRef } from \"react\";\n// Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n// Styles\nimport \"./styles/app.scss\";\n// data\nimport data from \"./data\";\n\nfunction App() {\n  // Refs\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]); // default songs[0]\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [libraryStatus, setLibraryStatus] = useState(false);\n\n  return (\n    <div className={`App ${libraryStatus ? \"library-active\" : \"\"}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setCurrentSong={setCurrentSong}\n        songs={songs}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}